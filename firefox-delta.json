{
  "failing": 1,
  "failingTests": [
    "navigation Page.goto should work when page calls history API in beforeunload"
  ],
  "passing": 244,
  "date": 1719462398000,
  "passingTests": [
    "AriaQueryHandler parseAriaSelector should find button",
    "AriaQueryHandler queryOne should find button by role",
    "AriaQueryHandler queryOne should find button by name and role",
    "AriaQueryHandler queryOne should find first matching element",
    "AriaQueryHandler queryOne should find by name",
    "AriaQueryHandler queryOne should find 2nd element by name",
    "AriaQueryHandler queryAll should find menu by name",
    "AriaQueryHandler queryAllArray $$eval should handle many elements",
    "AriaQueryHandler waitForSelector (aria) should immediately resolve promise if node exists",
    "AriaQueryHandler waitForSelector (aria) should work for ElementHandle.waitForSelector",
    "AriaQueryHandler waitForSelector (aria) should persist query handler bindings across reloads",
    "AriaQueryHandler waitForSelector (aria) should persist query handler bindings across navigations",
    "AriaQueryHandler waitForSelector (aria) should work independently of `exposeFunction`",
    "AriaQueryHandler waitForSelector (aria) should work with removed MutationObserver",
    "AriaQueryHandler waitForSelector (aria) should resolve promise when node is added",
    "AriaQueryHandler waitForSelector (aria) should work when node is added through innerHTML",
    "AriaQueryHandler waitForSelector (aria) Page.waitForSelector is shortcut for main frame",
    "AriaQueryHandler waitForSelector (aria) should run in specified frame",
    "AriaQueryHandler waitForSelector (aria) should throw when frame is detached",
    "AriaQueryHandler waitForSelector (aria) should survive cross-process navigation",
    "AriaQueryHandler waitForSelector (aria) should wait for visible",
    "AriaQueryHandler waitForSelector (aria) should wait for visible recursively",
    "AriaQueryHandler waitForSelector (aria) hidden should wait for visibility: hidden",
    "AriaQueryHandler waitForSelector (aria) hidden should wait for display: none",
    "AriaQueryHandler waitForSelector (aria) hidden should wait for removal",
    "AriaQueryHandler waitForSelector (aria) should return null if waiting to hide non-existing element",
    "AriaQueryHandler waitForSelector (aria) should respect timeout",
    "AriaQueryHandler waitForSelector (aria) should have an error message specifically for awaiting an element to be hidden",
    "AriaQueryHandler waitForSelector (aria) should respond to node attribute mutation",
    "AriaQueryHandler waitForSelector (aria) should return the element handle",
    "AriaQueryHandler waitForSelector (aria) should have correct stack trace for timeout",
    "AriaQueryHandler queryOne (Chromium web test) should find by name \"foo\"",
    "AriaQueryHandler queryOne (Chromium web test) should find by name \"bar\"",
    "AriaQueryHandler queryOne (Chromium web test) should find treeitem by name",
    "AriaQueryHandler queryOne (Chromium web test) should find by role \"button\"",
    "AriaQueryHandler queryOne (Chromium web test) should find both ignored and unignored",
    "BrowserContext should wait for a target",
    "BrowserContext BrowserContext.overridePermissions should deny permission when not listed",
    "BrowserContext BrowserContext.overridePermissions should grant permission when listed",
    "BrowserContext BrowserContext.overridePermissions should reset permissions",
    "BrowserContext BrowserContext.overridePermissions should trigger permission onchange",
    "BrowserContext BrowserContext.overridePermissions should isolate permissions between browser contexts",
    "BrowserContext BrowserContext.overridePermissions should grant persistent-storage",
    "Chromium-Specific Launcher tests Puppeteer.launch |browserURL| option should throw when using both browserWSEndpoint and browserURL",
    "Chromium-Specific Launcher tests Puppeteer.launch |browserURL| option should throw when trying to connect to non-existing browser",
    "Page.click should click the button if window.Node is removed",
    "Page.click should click the button with fixed position inside an iframe",
    "Cookie specs Page.cookies should not get cookies from subdomain",
    "Cookie specs Page.cookies should get cookies from nested path",
    "Cookie specs Page.cookies should not get cookies from not nested path",
    "Cookie specs Page.setCookie should work",
    "Cookie specs Page.setCookie should isolate cookies in browser contexts",
    "Cookie specs Page.setCookie should set multiple cookies",
    "Cookie specs Page.setCookie should set cookie with reasonable defaults",
    "Cookie specs Page.setCookie should set a cookie with a path",
    "Cookie specs Page.setCookie should set a cookie on a different domain",
    "Cookie specs Page.setCookie should set cookies from a frame",
    "Cookie specs Page.deleteCookie should delete cookie",
    "Cookie specs Page.deleteCookie should not delete cookie for different domain",
    "Cookie specs Page.deleteCookie should delete cookie for specified URL",
    "DefaultBrowserContext page.cookies() should work",
    "DefaultBrowserContext page.setCookie() should work",
    "DefaultBrowserContext page.deleteCookie() should work",
    "Page.Events.Dialog should allow accepting prompts",
    "ElementHandle specs ElementHandle.click should return Point data",
    "ElementHandle specs ElementHandle.isIntersectingViewport should work",
    "ElementHandle specs ElementHandle.isIntersectingViewport should work with svg elements",
    "Emulation Page.emulate should support clicking",
    "Evaluation specs Page.evaluate should replace symbols with undefined",
    "Evaluation specs Page.evaluate should throw when evaluation triggers reload",
    "Evaluation specs Page.evaluate should work from-inside an exposed function",
    "Evaluation specs Page.evaluate should work for circular object",
    "Evaluation specs Page.evaluate should simulate a user gesture",
    "Evaluation specs Page.evaluate should return properly serialize objects with unknown type fields",
    "Evaluation specs Page.evaluateOnNewDocument should evaluate before anything else on the page",
    "Evaluation specs Page.evaluateOnNewDocument should work with CSP",
    "Evaluation specs Page.removeScriptToEvaluateOnNewDocument should remove new document script",
    "Frame specs Frame.evaluate should throw for detached frames",
    "Frame specs Frame Management should send events when frames are manipulated dynamically",
    "Frame specs Frame Management should click elements in a frameset",
    "Frame specs Frame Management should report frame from-inside shadow DOM",
    "Frame specs Frame Management should report frame.parent()",
    "Frame specs Frame Management should report different frame instance when frame re-attaches",
    "ignoreHTTPSErrors should work with request interception",
    "input tests ElementHandle.uploadFile should upload the file",
    "input tests ElementHandle.uploadFile should read the file",
    "JSHandle JSHandle.jsonValue should work with dates",
    "JSHandle JSHandle.jsonValue should not throw for circular objects",
    "JSHandle JSHandle.toString should work with window subtypes",
    "Keyboard should send a character with sendCharacter",
    "Keyboard should send a character with sendCharacter in iframe",
    "Keyboard should specify repeat property",
    "Keyboard should type all kinds of characters",
    "Keyboard should specify location",
    "Keyboard should type emoji",
    "Keyboard should type emoji into an iframe",
    "Launcher specs Puppeteer Puppeteer.launch should close browser with beforeunload page",
    "Launcher specs Puppeteer Puppeteer.launch should filter out ignored default arguments in Chrome",
    "Locator Locator.race races multiple locators",
    "Mouse should trigger hover state with removed window.Node",
    "Mouse should send mouse wheel events",
    "Mouse should set ctrlKey on the wheel event",
    "Mouse should not throw if buttons are pressed twice",
    "Mouse should reset properly",
    "navigation Page.goto should work with subframes return 204",
    "navigation Page.goto should fail when server returns 204",
    "navigation Page.goto should navigate to empty page with networkidle0",
    "navigation Page.goto should navigate to page with iframe and networkidle0",
    "navigation Page.goto should navigate to empty page with networkidle2",
    "navigation Page.goto should fail when navigating to bad SSL",
    "navigation Page.goto should work when navigating to data url",
    "navigation Page.goto should wait for network idle to succeed navigation",
    "navigation Page.goto should navigate to dataURL and fire dataURL requests",
    "navigation Page.waitForNavigation should work with history.pushState()",
    "navigation Page.waitForNavigation should work with DOM history.back()/history.forward()",
    "navigation Page.waitForNavigation should work when subframe issues window.stop()",
    "navigation Page.goBack should work with HistoryAPI",
    "navigation Frame.goto should navigate subframes",
    "navigation Frame.goto should reject when frame detaches",
    "navigation Frame.waitForNavigation should work",
    "navigation Frame.waitForNavigation should fail when frame detaches",
    "network Network Events Page.Events.RequestFailed",
    "network Network Events Page.Events.RequestFinished",
    "network Network Events should fire events in proper order",
    "network Network Events should support redirects",
    "network Request.isNavigationRequest should work",
    "network Request.isNavigationRequest should work with request interception",
    "network Page.setExtraHTTPHeaders should work",
    "network Page.authenticate should fail if wrong credentials",
    "OOPIF should treat OOP iframes and normal iframes the same",
    "OOPIF should track navigations within OOP iframes",
    "OOPIF should support frames within OOP frames",
    "OOPIF should support evaluating in oop iframes",
    "OOPIF should provide access to elements",
    "OOPIF should support frames within OOP iframes",
    "OOPIF clickablePoint, boundingBox, boxModel should work for elements inside OOPIFs",
    "OOPIF should exposeFunction on a page with a PDF viewer",
    "OOPIF waitForFrame should resolve immediately if the frame already exists",
    "Page Page.close should reject all promises when page is closed",
    "Page Page.close should run beforeunload if asked for",
    "Page Page.close should *not* run beforeunload by default",
    "Page Page.close should terminate network waiters",
    "Page Page.Events.Console should work",
    "Page Page.Events.Console should work for different console API calls with logging functions",
    "Page Page.Events.Console should not fail for window object",
    "Page Page.exposeFunction should work",
    "Page Page.exposeFunction should throw exception in page context",
    "Page Page.exposeFunction should support throwing \"null\"",
    "Page Page.exposeFunction should be callable from-inside evaluateOnNewDocument",
    "Page Page.exposeFunction should survive navigation",
    "Page Page.exposeFunction should await returned promise",
    "Page Page.exposeFunction should await returned if called from function",
    "Page Page.exposeFunction should work on frames",
    "Page Page.exposeFunction should work with loading frames",
    "Page Page.exposeFunction should work on frames before navigation",
    "Page Page.exposeFunction should not throw when frames detach",
    "Page Page.exposeFunction should work with complex objects",
    "Page Page.exposeFunction should fallback to default export when passed a module object",
    "Page Page.exposeFunction should be called once",
    "Page Page.removeExposedFunction should work",
    "Page Page.select should work when re-defining top-level Event class",
    "Page Page.bringToFront should work",
    "Query handler tests P selectors should work ARIA selectors",
    "Query handler tests P selectors should work for ARIA selectors in multiple isolated worlds",
    "Query handler tests P selectors should work ARIA selectors with role",
    "Query handler tests P selectors should work ARIA selectors with name and role",
    "cooperative request interception Page.setRequestInterception should cooperatively abort by priority",
    "cooperative request interception Page.setRequestInterception should cooperatively continue by priority",
    "cooperative request interception Page.setRequestInterception should intercept",
    "cooperative request interception Page.setRequestInterception should work when POST is redirected with 302",
    "cooperative request interception Page.setRequestInterception should work when header manipulation headers with redirect",
    "cooperative request interception Page.setRequestInterception should be able to remove headers",
    "cooperative request interception Page.setRequestInterception should contain referer header",
    "cooperative request interception Page.setRequestInterception should properly return navigation response when URL has cookies",
    "cooperative request interception Page.setRequestInterception should stop intercepting",
    "cooperative request interception Page.setRequestInterception should show custom HTTP headers",
    "cooperative request interception Page.setRequestInterception should work with redirect inside sync XHR",
    "cooperative request interception Page.setRequestInterception should work with custom referer headers",
    "cooperative request interception Page.setRequestInterception should be abortable",
    "cooperative request interception Page.setRequestInterception should be able to access the error reason",
    "cooperative request interception Page.setRequestInterception should send referer",
    "cooperative request interception Page.setRequestInterception should fail navigation when aborting main resource",
    "cooperative request interception Page.setRequestInterception should work with redirects",
    "cooperative request interception Page.setRequestInterception should work with redirects for subresources",
    "cooperative request interception Page.setRequestInterception should be able to abort redirects",
    "cooperative request interception Page.setRequestInterception should work with equal requests",
    "cooperative request interception Page.setRequestInterception should navigate to dataURL and fire dataURL requests",
    "cooperative request interception Page.setRequestInterception should work with encoded server",
    "cooperative request interception Page.setRequestInterception should work with badly encoded server",
    "cooperative request interception Page.setRequestInterception should not throw \"Invalid Interception Id\" if the request was cancelled",
    "cooperative request interception Page.setRequestInterception should throw if interception is not enabled",
    "cooperative request interception Request.continue should work",
    "cooperative request interception Request.continue should amend HTTP headers",
    "cooperative request interception Request.continue should amend method",
    "cooperative request interception Request.continue should amend post data",
    "cooperative request interception Request.continue should amend both post data and method on navigation",
    "cooperative request interception Request.respond should indicate already-handled if an intercept has been handled",
    "request interception Page.setRequestInterception should intercept",
    "request interception Page.setRequestInterception should work when POST is redirected with 302",
    "request interception Page.setRequestInterception should work when header manipulation headers with redirect",
    "request interception Page.setRequestInterception should be able to remove headers",
    "request interception Page.setRequestInterception should contain referer header",
    "request interception Page.setRequestInterception should properly return navigation response when URL has cookies",
    "request interception Page.setRequestInterception should stop intercepting",
    "request interception Page.setRequestInterception should show custom HTTP headers",
    "request interception Page.setRequestInterception should work with redirect inside sync XHR",
    "request interception Page.setRequestInterception should work with custom referer headers",
    "request interception Page.setRequestInterception should be abortable",
    "request interception Page.setRequestInterception should send referer",
    "request interception Page.setRequestInterception should fail navigation when aborting main resource",
    "request interception Page.setRequestInterception should work with redirects",
    "request interception Page.setRequestInterception should work with redirects for subresources",
    "request interception Page.setRequestInterception should be able to abort redirects",
    "request interception Page.setRequestInterception should work with equal requests",
    "request interception Page.setRequestInterception should navigate to dataURL and fire dataURL requests",
    "request interception Page.setRequestInterception should work with encoded server",
    "request interception Page.setRequestInterception should work with badly encoded server",
    "request interception Page.setRequestInterception should not throw \"Invalid Interception Id\" if the request was cancelled",
    "request interception Page.setRequestInterception should throw if interception is not enabled",
    "request interception Request.continue should work",
    "request interception Request.continue should amend HTTP headers",
    "request interception Request.continue should amend method",
    "request interception Request.continue should amend post data",
    "request interception Request.continue should amend both post data and method on navigation",
    "request interception Request.continue should fail if the header value is invalid",
    "Screenshots Page.screenshot should get screenshot bigger than the viewport",
    "Screenshots Page.screenshot should take fullPage screenshots",
    "Screenshots Page.screenshot should restore to original viewport size after taking fullPage screenshots when defaultViewport is null",
    "Stack trace should work",
    "Stack trace should work with handles",
    "Stack trace should work with contiguous evaluation",
    "Stack trace should work with nested function calls",
    "Target should report when a new page is created and closed",
    "Target should report when a target url changes",
    "Target should not crash while redirecting if original request was missed",
    "Target Browser.waitForTarget should wait for a target",
    "waittask specs Frame.waitForFunction should work when resolved right before execution context disposal",
    "waittask specs Frame.waitForSelector should work with removed MutationObserver",
    "waittask specs Frame.waitForSelector Page.waitForSelector is shortcut for main frame",
    "waittask specs Frame.waitForSelector should run in specified frame",
    "waittask specs Frame.waitForSelector should throw when frame is detached",
    "waittask specs Frame.waitForSelector xpath should run in specified frame",
    "waittask specs Frame.waitForSelector xpath should throw when frame is detached",
    "Workers should report errors"
  ]
}